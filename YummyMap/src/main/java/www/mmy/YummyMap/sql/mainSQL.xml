<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
			PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
					"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
					
<mapper namespace="mainSql">

	<select id="upSoDetailInfo" resultType="upsoVo" parameterType="String">
		SELECT
			upso_id id, place_name, category_name, phone, road_address_name, longitude x, latitude y, place_url, image_url,
			NVL(cont_sum, 0) cont_sum,  NVL(star_avg, 0) star_avg
		FROM
			upso,( SELECT  
						res_id, 
	                	COUNT(rev_no) AS cont_sum,
	                    TRUNC(AVG(rating_upso), 1) AS star_avg
	           		FROM 
	           			upso_review
	           		WHERE 
	           			isShow='Y' 
	           		GROUP BY  
	           			res_id 
	           	)
		WHERE
			upso_id = #{upso_id}
			AND upso_id = res_id(+)
			AND isShow = 'Y'
	</select>
	<select id="getUpSoList_keyword" resultType="upsoVo" parameterType="Map">
		SELECT
		     rnum, id, place_name, category_name, phone, road_address_name,  x,  y, place_url, image_url, cont_sum,   star_avg
		FROM
		    (
		        SELECT
		                rownum rnum,  id, place_name, category_name, phone, road_address_name,  x,  y, place_url, image_url, cont_sum,   star_avg               
		        FROM
		            (
		                SELECT
		                            upso.upso_id id, place_name, category_name, phone, road_address_name, longitude x, latitude y, place_url, image_url,
		                            NVL(cont_sum, 0) cont_sum,  NVL(star_avg, 0) star_avg
		                FROM
		                    upso, ( SELECT  
		                                res_id, 
		                                COUNT(rev_no) AS cont_sum,
		                                AVG(rating_upso) AS star_avg
		                            FROM 
		                                upso_review
		                            WHERE 
		                                isShow='Y' 
		                            GROUP BY  
		                                res_id 
		                            ),
		                            ( SELECT
		                                upso_id 
		                              FROM
		                                keyword
		                              WHERE
		                                keyword = #{searchInfoVo.keyword}
		                            ) sub
		                WHERE
		                    upso.isShow = 'Y'
		                    AND upso.upso_id = sub.upso_id
		                    AND upso.upso_id = res_id(+)
		                    <if test="searchInfoVo.category_name != null">
							AND category_name LIKE '%${searchInfoVo.category_name}%'		                    	
		                    </if>
		                ORDER BY
		                <if test='searchInfoVo.order_standard.equals("star_avg")'>
		                    star_avg
		                </if>
		                <if test='searchInfoVo.order_standard.equals("cont_sum")'>
		                    cont_sum
		                </if>
		                )
		        )
		WHERE
		    rnum BETWEEN #{pageUtil.startCont} AND #{pageUtil.endCont}
	</select>
	<select id="countUpso_category" resultType="int" parameterType="searchInfoVo">
		SELECT
		    count(*)
		FROM
		    upso,
		                ( SELECT
		                    upso_id 
		                  FROM
		                    keyword
		                  WHERE
		                    keyword = #{keyword}
		                ) sub
		WHERE
		    upso.isShow = 'Y'
		    AND upso.upso_id = sub.upso_id
		    AND category_name LIKE '%${category_name}%'	
	</select>

	<select id="upSoList_geolocation" resultType="upsoVo" parameterType="searchInfoVo">
		SELECT 
			upso_id id, place_name, category_name, phone, road_address_name, longitude x, latitude y, place_url, image_url,
			NVL(cont_sum, 0) cont_sum,  NVL(star_avg, 0) star_avg,
			SQRT( POWER(( 37.4917910 - LATITUDE) * 110979.309, 2)
			      + POWER((127.4875970 - LONGITUDE) *  88907.949, 2)
			      ) z
	  	FROM upso
	    	 , (SELECT     #{y} v_x    -- 기준좌표-위도(카카오기준 y)
	             ,    #{x} v_y    -- 기준좌표-경도(카카오기준 x ) 
	             , 110979.309     r_x    -- 위도-거리 환산계수
	             ,  88907.949     r_y    -- 경도-거리 환산계수
	             ,    1000.000     v_z    -- 검색반경
	          FROM dual
	        ),
	         ( SELECT  res_id, 
	                   COUNT(rev_no) AS cont_sum,
	                   AVG(rating_upso) AS star_avg
	           FROM upso_review
	           WHERE isShow='Y' 
	           GROUP BY  res_id ) sub
	 	WHERE 
			SQRT( POWER((v_x - LATITUDE) * r_x, 2)
			        + POWER((v_y - LONGITUDE) * r_y, 2)
			        ) &lt;= v_z
			AND   INSTR(query_keyword, #{keyword}) > 0 
			AND LATITUDE BETWEEN v_x - v_z / r_x AND v_x + v_z / r_x
			AND LONGITUDE BETWEEN v_y - v_z / r_y AND v_y + v_z / r_y
			AND  isShow = 'Y'
			AND upso_id = res_id(+)
	 	ORDER BY z
	</select>
	
	<select id="showUpSo" resultType="int" parameterType="String">
		SELECT
			count(upso_id)
		FROM
			upso
		WHERE
			upso_id = #{upso_id}
	</select>
	
	<select id="showKeyword" resultType="searchInfoVo" parameterType="String">
		SELECT
			keyword_id, keyword, query_keyword, query_location, upsoCount
		FROM
			keyword,
			 (SELECT count(*) upsoCount FROM keyword WHERE keyword = #{keyword} GROUP BY keyword)
		WHERE
			keyword = #{keyword}
			AND rownum = 1
	</select>
	
	<select id="upsoListGroupByCategory" resultType="upsoVo" parameterType="searchInfoVo">
		SELECT
			upso.upso_id id, place_name, category_name, phone, road_address_name, longitude x, latitude y, place_url, image_url, 
			NVL(cont_sum, 0) cont_sum,  NVL(star_avg, 0) star_avg
		FROM
			upso, ( SELECT  
						res_id, 
	                	COUNT(rev_no) AS cont_sum,
	                    AVG(rating_upso) AS star_avg
	           		FROM 
	           			upso_review
	           		WHERE 
	           			isShow='Y' 
	           		GROUP BY  
	           			res_id 
	           		),
	           		( SELECT
	           			upso_id 
	           		  FROM
	           		  	keyword
	           		  WHERE
	           		  	keyword = #{keyword}
	           		) sub
		WHERE
			upso.isShow = 'Y'
			AND upso.upso_id = sub.upso_id
			AND upso.upso_id = res_id(+)
			AND category_name LIKE '%${category_name}%'
	</select>
	
	<select id="reviewList" resultType="reviewVo" parameterType="String">
		SELECT
			rev_no, mid, res_id, rev_txt, rating_upso, TO_CHAR(cr_date, 'yyyy"년"mm"월"dd"일" hh24"시"mi"분"')  cr_date
		FROM
			upso_review
		WHERE
			res_id = #{upso_id}
			AND isShow = 'Y'
	</select>
	
	<insert id="insertUpSo" parameterType="upsoVo">
		INSERT INTO
			upso
		VALUES (
			#{id},#{place_name},#{category_name},#{phone},
			<if test="road_address_name != null and road_address_name !=''">
			#{road_address_name},			
			</if>
			<if test="road_address_name == null or road_address_name == ''">
			#{address_name},
			</if>
			#{x},#{y},#{place_url},#{image_url}, 'Y'		
		)
	</insert>
	
	<insert id="insertKeyword" parameterType="searchInfoVo">
	<selectKey keyProperty="keyword_id" resultType="int" order="BEFORE">
		SELECT NVL(MAX(keyword_id)+1 , 1) FROM keyword
	</selectKey>
		INSERT INTO
			keyword
		VALUES (
			#{keyword_id}, #{keyword}, #{query_keyword}, #{query_location}, #{upso_id}
		)
	</insert>
	
	<insert id="insertReview" parameterType="reviewVo">
	<selectKey keyProperty="rev_no" resultType="int" order="BEFORE">
		SELECT NVL(MAX(rev_no)+1 , 1) FROM upso_review
	</selectKey>
		INSERT INTO
			upso_review (rev_no, mid, res_id, rev_txt, rating_upso)
		VALUES (
			#{rev_no}, #{mid}, #{res_id}, #{rev_txt}, #{rating_upso}		
		)
	</insert>


</mapper>
